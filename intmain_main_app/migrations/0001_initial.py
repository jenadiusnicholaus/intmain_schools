# Generated by Django 4.1.4 on 2023-01-26 19:06

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ChatRoom",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(blank=True, default="", upload_to="topics_icons"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "15. ChatRooms",
                "verbose_name_plural": "15. ChatRooms",
            },
        ),
        migrations.CreateModel(
            name="Classes",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("class_name", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "class_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("order_id", models.IntegerField(default=1)),
                (
                    "icon",
                    models.ImageField(
                        blank=True, default="", upload_to="classes_icons"
                    ),
                ),
                ("active_status", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "01. Class",
                "verbose_name_plural": "01. Classes",
            },
        ),
        migrations.CreateModel(
            name="QuizMatchingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "10. Quiz Matching-Items",
                "verbose_name_plural": "10. Quiz Matching-Items",
            },
        ),
        migrations.CreateModel(
            name="SubjectClass",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("order_id", models.IntegerField(default=1)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=512, null=True, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "classes",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.classes",
                    ),
                ),
            ],
            options={
                "verbose_name": "02_2. Subject Class",
                "verbose_name_plural": "02_2. Subject Class",
                "ordering": ("classes", "subject"),
            },
        ),
        migrations.CreateModel(
            name="Subjects",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("subject_name", models.CharField(max_length=255, unique=True)),
                (
                    "subject_description",
                    ckeditor_uploader.fields.RichTextUploadingField(null=True),
                ),
                ("order_id", models.IntegerField(default=1)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True, default="", upload_to="subject_icons"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "02. Subject",
                "verbose_name_plural": "02. Subjects",
            },
        ),
        migrations.CreateModel(
            name="SubTopics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("subtopic_name", models.CharField(max_length=255)),
                ("order_id", models.IntegerField(default=1)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True, default="", upload_to="language_icons"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "04. Sub Topics",
                "verbose_name_plural": "04. Sub Topics",
            },
        ),
        migrations.CreateModel(
            name="TestMatchingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subtopic",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.subtopics",
                    ),
                ),
            ],
            options={
                "verbose_name": "14. Test Matching-Items",
                "verbose_name_plural": "14. Test Matching-Items",
            },
        ),
        migrations.CreateModel(
            name="Topics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("topic_name", models.CharField(max_length=255)),
                ("order_id", models.IntegerField(default=1)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(blank=True, default="", upload_to="topics_icons"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subject_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_topics",
                        to="intmain_main_app.subjectclass",
                    ),
                ),
            ],
            options={
                "verbose_name": "03. Topic",
                "verbose_name_plural": "03. Topic",
                "unique_together": {("subject_class", "topic_name")},
            },
        ),
        migrations.CreateModel(
            name="TestMatchingItemQuestions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "matching_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.testmatchingitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "14_2. Questions",
                "verbose_name_plural": "14_2. Questions",
                "unique_together": {("question", "matching_item")},
            },
        ),
        migrations.CreateModel(
            name="TestMatchingItemOptions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("option", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "matching_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.testmatchingitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "14_3. Items",
                "verbose_name_plural": "14_3. Items",
                "unique_together": {("option", "matching_item")},
            },
        ),
        migrations.AddField(
            model_name="subtopics",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subtopics",
                to="intmain_main_app.topics",
            ),
        ),
        migrations.AddField(
            model_name="subjectclass",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="intmain_main_app.subjects",
            ),
        ),
        migrations.CreateModel(
            name="Segments",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("segment_id", models.IntegerField(blank=True, null=True)),
                ("segment_name", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subtopic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primarysegments_set",
                        to="intmain_main_app.subtopics",
                    ),
                ),
            ],
            options={
                "verbose_name": "05. Segments",
                "verbose_name_plural": "05. Segments",
                "unique_together": {("subtopic", "segment_id")},
            },
        ),
        migrations.CreateModel(
            name="QuizMultipleChoicesQuestions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question", models.CharField(max_length=4000, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.segments",
                    ),
                ),
            ],
            options={
                "verbose_name": "07. Quiz Multiple-Choice",
                "verbose_name_plural": "07. Quiz Multiple-Choice",
                "unique_together": {("question", "segment")},
            },
        ),
        migrations.CreateModel(
            name="QuizMultipleChoicesOptions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("choice", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="intmain_main_app.quizmultiplechoicesquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "07_2. Quiz M-Choice Options",
                "verbose_name_plural": "07_2. Quiz M-Choice Options",
                "unique_together": {("question", "choice")},
            },
        ),
        migrations.CreateModel(
            name="QuizMatchingItemQuestions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "matching_item",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmatchingitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "10_2. Questions",
                "verbose_name_plural": "10_2. Questions",
                "unique_together": {("question", "matching_item")},
            },
        ),
        migrations.CreateModel(
            name="QuizMatchingItemOptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "matching_item",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmatchingitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "10_3. Items",
                "verbose_name_plural": "10_3. Items",
                "unique_together": {("option", "matching_item")},
            },
        ),
        migrations.AddField(
            model_name="quizmatchingitem",
            name="segment",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="intmain_main_app.segments",
            ),
        ),
        migrations.CreateModel(
            name="Notes",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("notes", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("send_for_approval", "Send For Approval"),
                            ("return_for_amendment", "Return For Amendment"),
                            ("approved", "Approved"),
                        ],
                        default="draft",
                        max_length=120,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respective_notes",
                        to="intmain_main_app.segments",
                    ),
                ),
            ],
            options={
                "verbose_name": "06. Notes",
                "verbose_name_plural": "06. Notes",
            },
        ),
        migrations.CreateModel(
            name="MultipleChoicesQuestions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question", models.CharField(max_length=4000, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subtopic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.subtopics",
                    ),
                ),
            ],
            options={
                "verbose_name": "11. Test Multiple-Choice",
                "verbose_name_plural": "11. Test Multiple-Choice",
                "unique_together": {("question", "subtopic")},
            },
        ),
        migrations.CreateModel(
            name="MultipleChoicesOptions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("choice", models.CharField(max_length=4000)),
                ("is_correct", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="intmain_main_app.multiplechoicesquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "11_2. Multiple Choice Options",
                "verbose_name_plural": "11_2. Multiple Choice Options",
                "unique_together": {("question", "choice")},
            },
        ),
        migrations.CreateModel(
            name="Messages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session", models.CharField(blank=True, max_length=4000, null=True)),
                ("message", models.TextField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lcms_lcms_primary_messages_set",
                        to="intmain_main_app.chatroom",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lcms_lcms_primary_messages_user_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "16. Messages",
                "verbose_name_plural": "16. Messages",
            },
        ),
        migrations.AddField(
            model_name="chatroom",
            name="subtopic",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="intmain_main_app.subtopics",
            ),
        ),
        migrations.CreateModel(
            name="TrueOrFalseQuestions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question", models.CharField(max_length=4000, unique=True)),
                (
                    "answer",
                    models.CharField(
                        blank=True,
                        choices=[("true", "True"), ("false", "False")],
                        max_length=120,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subtopic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.subtopics",
                    ),
                ),
            ],
            options={
                "verbose_name": "10. Test True/False",
                "verbose_name_plural": "10. Test True/False",
                "unique_together": {("question", "subtopic")},
            },
        ),
        migrations.CreateModel(
            name="TestMatchingItemAnswers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.testmatchingitemoptions",
                    ),
                ),
                (
                    "matching_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.testmatchingitem",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.testmatchingitemquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "14_4. Answers",
                "verbose_name_plural": "14_4. Answers",
                "unique_together": {("question", "matching_item")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="subtopics",
            unique_together={("topic", "subtopic_name")},
        ),
        migrations.AlterUniqueTogether(
            name="subjectclass",
            unique_together={("subject", "classes")},
        ),
        migrations.CreateModel(
            name="ShortAnswerQuestions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("question", models.CharField(max_length=4000)),
                ("answer", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subtopic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.subtopics",
                    ),
                ),
            ],
            options={
                "verbose_name": "13. Test Short Answers",
                "verbose_name_plural": "13. Test Short Answers",
                "unique_together": {("question", "subtopic")},
            },
        ),
        migrations.CreateModel(
            name="QuizTrueOrFalse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=4000, unique=True)),
                (
                    "answer",
                    models.CharField(
                        blank=True,
                        choices=[("true", "True"), ("false", "False")],
                        max_length=120,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_quiztrueorfalse_set",
                        to="intmain_main_app.segments",
                    ),
                ),
            ],
            options={
                "verbose_name": "08. Quiz True/False",
                "verbose_name_plural": "08. Quiz True/False",
                "unique_together": {("question", "segment")},
            },
        ),
        migrations.CreateModel(
            name="QuizShortAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=4000)),
                ("answer", models.CharField(max_length=4000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.segments",
                    ),
                ),
            ],
            options={
                "verbose_name": "09. Quiz Short Answers",
                "verbose_name_plural": "09. Quiz Short Answers",
                "unique_together": {("question", "segment")},
            },
        ),
        migrations.CreateModel(
            name="QuizMultipleChoicesAnswers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "choice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmultiplechoicesoptions",
                    ),
                ),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respective_answer",
                        to="intmain_main_app.quizmultiplechoicesquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "07_3. Quiz M-Choice Answers",
                "verbose_name_plural": "07_3. Quiz M-Choice Answers",
                "unique_together": {("question", "choice")},
            },
        ),
        migrations.CreateModel(
            name="QuizMatchingItemAnswers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmatchingitemoptions",
                    ),
                ),
                (
                    "matching_item",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmatchingitem",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.quizmatchingitemquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "10_4. Answers",
                "verbose_name_plural": "10_4. Answers",
                "unique_together": {("matching_item", "question")},
            },
        ),
        migrations.CreateModel(
            name="MultipleChoicesAnswers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "choice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intmain_main_app.multiplechoicesoptions",
                    ),
                ),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respective_answer",
                        to="intmain_main_app.multiplechoicesquestions",
                    ),
                ),
            ],
            options={
                "verbose_name": "11_3. Multiple Choice Answers",
                "verbose_name_plural": "11_3. Multiple Choice Answers",
                "unique_together": {("question", "choice")},
            },
        ),
    ]
